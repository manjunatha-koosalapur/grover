{
	"info": {
		"_postman_id": "517dfcc0-2fc7-4b93-b988-508d574a9a55",
		"name": "GroverTests_Jenkins",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5995100"
	},
	"item": [
		{
			"name": "random-jokes_api_responses",
			"item": [
				{
					"name": "Get_random_jokes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//status code\r",
									"pm.test(\"Validate status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//multiple assertions\r",
									"pm.test(\"Validate response body - multiple assertions\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.categories).to.eql([]);\r",
									"    pm.expect(jsonData.created_at).contains(\"2020-01-05\")\r",
									"    pm.expect(jsonData.icon_url).to.eql(\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\");\r",
									"    pm.expect(jsonData.updated_at).contains(\"2020-01-05\")\r",
									"    pm.expect(jsonData.url).contains(\"https://api.chucknorris.io/jokes\")\r",
									"    pm.expect(jsonData.value).contains(\"Chuck Norris\")\r",
									"});\r",
									"\r",
									"//Headers - Content-Type is presence\r",
									"pm.test(\"Validate headers - Content-Type presence\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"//Headers - Content Type value\r",
									"pm.test(\"Validate headers - Content-Type value\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-type')).to.eql(\"application/json;charset=UTF-8\")\r",
									"})\r",
									"\r",
									"//Cookies\r",
									"pm.test(\"Validate cookies presence\", function () {\r",
									"    pm.expect(pm.cookies.has(\"_cfduid\")).to.be.false\r",
									"})\r",
									"\r",
									"//Response Time\r",
									"pm.test(\"Validate response time less than 1600 ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1600)\r",
									"})\r",
									"\r",
									"// Few similar tests with different assertion styles //\r",
									"// tests [\"Validating status code\"] = responseCode.code === 200\r",
									"// tests [\"Validating response body-categories\"] = responseBody.has([])\r",
									"// tests [\"Validating response body-icon_url\"] = responseBody.has(\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\")\r",
									"// tests [\"Validating response body-updated_at\"] = responseBody.has(\"2020-01-05\")\r",
									"// tests [\"Validating response body-url\"] = responseBody.has(\"https://api.chucknorris.io/jokes\")\r",
									"// tests [\"Validating response body-value\"] = responseBody.has(\"Chuck Norris\")\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.chucknorris.io/jokes/random",
							"protocol": "https",
							"host": [
								"api",
								"chucknorris",
								"io"
							],
							"path": [
								"jokes",
								"random"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "query_StoreCodeCurrency",
			"item": [
				{
					"name": "store_at_currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify store(at) has the correct currency\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.store.code).contains('at')\r",
									"    pm.expect(jsonData.data.store.defaultCurrency).contains('EUR')\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Store($storeId: ID) {\n  store(id: $storeId) {\n    alternativeLocales\n    code\n    defaultCurrency\n    defaultLocale\n    id\n  }\n}",
								"variables": "{\n  \"storeId\": 4\n}\n"
							}
						},
						"url": {
							"raw": "https://grover-staging.graphcdn.app/",
							"protocol": "https",
							"host": [
								"grover-staging",
								"graphcdn",
								"app"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "store_de_currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Verify store(de) has the correct currency\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.store.code).contains('de')\r",
									"    pm.expect(jsonData.data.store.defaultCurrency).contains('EUR')\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Store($storeId: ID) {\n  store(id: $storeId) {\n    alternativeLocales\n    code\n    defaultCurrency\n    defaultLocale\n    id\n  }\n}",
								"variables": "{\n  \"storeId\": 1\n}\n"
							}
						},
						"url": {
							"raw": "https://grover-staging.graphcdn.app/",
							"protocol": "https",
							"host": [
								"grover-staging",
								"graphcdn",
								"app"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "store_es_currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify store(es) has the correct currency\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.store.code).contains('es')\r",
									"    pm.expect(jsonData.data.store.defaultCurrency).contains('EUR')\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Store($storeId: ID) {\n  store(id: $storeId) {\n    alternativeLocales\n    code\n    defaultCurrency\n    defaultLocale\n    id\n  }\n}",
								"variables": "{\n  \"storeId\": 3\n}\n"
							}
						},
						"url": {
							"raw": "https://grover-staging.graphcdn.app/",
							"protocol": "https",
							"host": [
								"grover-staging",
								"graphcdn",
								"app"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "store_nl_currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify store(nl) has the correct currency\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.store.code).contains('nl')\r",
									"    pm.expect(jsonData.data.store.defaultCurrency).contains('EUR')\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Store($storeId: ID) {\n  store(id: $storeId) {\n    alternativeLocales\n    code\n    defaultCurrency\n    defaultLocale\n    id\n  }\n}",
								"variables": "{\n  \"storeId\": 5\n}\n"
							}
						},
						"url": {
							"raw": "https://grover-staging.graphcdn.app/",
							"protocol": "https",
							"host": [
								"grover-staging",
								"graphcdn",
								"app"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "store_us_currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify store(us) has the correct currency\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.store.code).contains('us')\r",
									"    pm.expect(jsonData.data.store.defaultCurrency).contains('USD')\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Store($storeId: ID) {\n  store(id: $storeId) {\n    alternativeLocales\n    code\n    defaultCurrency\n    defaultLocale\n    id\n  }\n}",
								"variables": "{\n  \"storeId\": 6\n}\n"
							}
						},
						"url": {
							"raw": "https://grover-staging.graphcdn.app/",
							"protocol": "https",
							"host": [
								"grover-staging",
								"graphcdn",
								"app"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get_StoreCode",
			"item": [
				{
					"name": "query_StoreCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Store {\r\n  store {\r\n    code\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://grover-staging.graphcdn.app/",
							"protocol": "https",
							"host": [
								"grover-staging",
								"graphcdn",
								"app"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "query_storeID",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Store {\r\n  store {\r\n    id\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://grover-staging.graphcdn.app/",
							"protocol": "https",
							"host": [
								"grover-staging",
								"graphcdn",
								"app"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}